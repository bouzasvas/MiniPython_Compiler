/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.analysis;

import minipython.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object in);
    Object getOut(Node node);
    void setOut(Node node, Object out);

    void caseStart(Start node);
    void caseACmdsGoal(ACmdsGoal node);
    void caseAFuncCommands(AFuncCommands node);
    void caseAStatementCommands(AStatementCommands node);
    void caseAFuncFunction(AFuncFunction node);
    void caseAArgArgument(AArgArgument node);
    void caseAAssignValue(AAssignValue node);
    void caseAMoreArgs(AMoreArgs node);
    void caseAIfStatement(AIfStatement node);
    void caseAWhileStatement(AWhileStatement node);
    void caseAForStatement(AForStatement node);
    void caseAReturnStatement(AReturnStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAOpStatement(AOpStatement node);
    void caseAListStatement(AListStatement node);
    void caseACallStatement(ACallStatement node);
    void caseAAddExpression(AAddExpression node);
    void caseASubExpression(ASubExpression node);
    void caseAMultiplicationExpression(AMultiplicationExpression node);
    void caseADivisionExpression(ADivisionExpression node);
    void caseAListExpression(AListExpression node);
    void caseAMorevaluesExpression(AMorevaluesExpression node);
    void caseAPrePlusPlusExpression(APrePlusPlusExpression node);
    void caseAPreMinusMinusExpression(APreMinusMinusExpression node);
    void caseAPostPlusPlusExpression(APostPlusPlusExpression node);
    void caseAPostMinusMinusExpression(APostMinusMinusExpression node);
    void caseAValueExpression(AValueExpression node);
    void caseAIdExpression(AIdExpression node);
    void caseAFuncExpression(AFuncExpression node);
    void caseAParenthesisExpression(AParenthesisExpression node);
    void caseAListPrePostElements(AListPrePostElements node);
    void caseAIdPrePostElements(AIdPrePostElements node);
    void caseAMoreValues(AMoreValues node);
    void caseAGreatComparison(AGreatComparison node);
    void caseALessComparison(ALessComparison node);
    void caseAEqComparison(AEqComparison node);
    void caseANoteqComparison(ANoteqComparison node);
    void caseATrueComparison(ATrueComparison node);
    void caseAFalseComparison(AFalseComparison node);
    void caseAFunctionCall(AFunctionCall node);
    void caseAArgList(AArgList node);
    void caseAMoreExp(AMoreExp node);
    void caseANumberValue(ANumberValue node);
    void caseAStringValue(AStringValue node);
    void caseAIntNumber(AIntNumber node);

    void caseTTab(TTab node);
    void caseTPlusPlus(TPlusPlus node);
    void caseTMinusMinus(TMinusMinus node);
    void caseTMinusEq(TMinusEq node);
    void caseTDivEq(TDivEq node);
    void caseTEq(TEq node);
    void caseTNoteq(TNoteq node);
    void caseTColon(TColon node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTAssign(TAssign node);
    void caseTLess(TLess node);
    void caseTGreat(TGreat node);
    void caseTDef(TDef node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBr(TLBr node);
    void caseTRBr(TRBr node);
    void caseTComma(TComma node);
    void caseTIf(TIf node);
    void caseTWhile(TWhile node);
    void caseTFor(TFor node);
    void caseTIn(TIn node);
    void caseTPrint(TPrint node);
    void caseTReturn(TReturn node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTBlank(TBlank node);
    void caseTLineComment(TLineComment node);
    void caseTInteger(TInteger node);
    void caseTId(TId node);
    void caseTString(TString node);
    void caseEOF(EOF node);
}
